# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

{ config, pkgs, ... }:

{
  imports =
    [ 
      ./hardware-configuration.nix
    ];

  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;
  boot.loader.efi.efiSysMountPoint = "/boot/efi";

  networking.hostName = "thetreehouse";
  users.defaultUserShell = pkgs.zsh;

  networking.networkmanager.enable = true;

  time.timeZone = "America/Los_Angeles";

  i18n.defaultLocale = "en_US.UTF-8";

  i18n.extraLocaleSettings = {
    LC_ADDRESS = "en_US.UTF-8";
    LC_IDENTIFICATION = "en_US.UTF-8";
    LC_MEASUREMENT = "en_US.UTF-8";
    LC_MONETARY = "en_US.UTF-8";
    LC_NAME = "en_US.UTF-8";
    LC_NUMERIC = "en_US.UTF-8";
    LC_PAPER = "en_US.UTF-8";
    LC_TELEPHONE = "en_US.UTF-8";
    LC_TIME = "en_US.UTF-8";
  };


  hardware.opengl.enable = true;
  hardware.opengl.driSupport = true;

  services.xserver.enable = true;

  services.xserver.displayManager.startx.enable = true; 
  services.xserver.windowManager.dwm.enable = true;

 nixpkgs.overlays = [
    (final: prev: {
      dwm = prev.dwm.overrideAttrs (old: { src = /home/larry/dwm ;});
    })
];

  services.xserver = {
    layout = "us";
    xkbVariant = "";
  };

  services.printing.enable = true;

  sound.enable = true;
  hardware.pulseaudio.enable = false;
  security.rtkit.enable = true;
  services.pipewire = {
    enable = true;
    alsa.enable = true;
    alsa.support32Bit = true;
    pulse.enable = true;
    jack.enable = true;
  };

  services.xserver.libinput.enable = true;

  users.users.larry = {
    isNormalUser  = true;
    home  = "/home/larry";
    description  = "Larry Hamilton";
    extraGroups  = [ "wheel" "networkmanager" ];
    packages = with pkgs; [
      emacs-gtk
      emacs
      brave
      oh-my-zsh
	    fuse
	    appimage-run
	    ripgrep
	    fd
      links2
      neofetch
      pfetch
      ipfetch
	    libnotify
	    dunst
	    xfce.xfce4-screenshooter
	    obs-studio
	    obs-studio-plugins.obs-vkcapture
	    ranger
	    feh
	    etcher
	    transmission-gtk
	    transmission-remote-gtk
	    spotify
	    spotify-tui
      pavucontrol
	    discord
	    betterdiscordctl
	    vlc
      amberol
	    blender
      gimp
      steam
      lutris
      godot
	    lmms
      slstatus
      wine
	    wine64
	    picom
	    dmenu
	    nitrogen
	    lxappearance
    ];
  };

  security.sudo.enable = true;
  security.sudo.wheelNeedsPassword = false;
  
  nixpkgs.config.allowUnfree = true;
  environment.systemPackages = with pkgs; [
        neovim 
        wget
        git
        doas
	      zsh
	      killall
	      gnumake
	      tree
        alacritty
	      easyeffects
	      gnome.file-roller
	     	gcc
        ghc
	      go
        lua5_4
        cargo
	      rustc
	      rust-analyzer
	      rustup
	      openssl
	      python3
	      openssh
	      ssh-tools
	      ssh-chat
	      ssh-ident
	      ssh-audit
	      xorg.xbacklight
	      xorg.xorgserver
	      xorg.xf86inputevdev
	      xorg.xf86inputsynaptics
	      xorg.xf86inputlibinput
	      xorg.xf86videointel
	      brightnessctl
	      SDL2
	      imagemagick
	      vulkan-loader
	      vulkan-tools
	      vulkan-headers
	      vulkan-tools-lunarg
	      gtk4
	      gtk3
	      gtk2
	      gtk3-x11
	      gtk2-x11
        pamixer
  ];

  nixpkgs.config.permittedInsecurePackages = [
                "electron-12.2.3"
              ];

  programs.mtr.enable = true;
  programs.gnupg.agent = {
     enable = true;
     enableSSHSupport = true;
   };

  services.openssh.enable = true;

  system.stateVersion = "22.11"; 
}
